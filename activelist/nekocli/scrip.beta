#!/bin/bash

NEKOCLI_VER=1
NEKORAY_NETWORK_FOLDER=/ultimate/network/nekoray
NEKORAY_ONLINE_VERSION=https://raw.githubusercontent.com/ExtremeDot/myNotes/main/activelist/nekocli/version
NEKORAY_ONLINE_VERSION_UPDATER=https://raw.githubusercontent.com/ExtremeDot/myNotes/main/activelist/nekocli/updater
NEKORAY_ONLINE_VERSION_SHA=https://raw.githubusercontent.com/ExtremeDot/myNotes/main/activelist/nekocli/sha256

function config() {
  input_file="/ultimate/network/$1.json"
  output_file="$NEKORAY_NETWORK_FOLDER/config.json"

  # check if input file exists
  if [[ ! -f "$input_file" ]]; then
    echo "Error: $input_file does not exist"
    return 1
  fi

  echo "Copying $input_file to $output_file..."
  cp "$input_file" "$output_file"
  echo "Config file updated"
}


function updater() {
  # check if update is required
  if [[ "$NEKOCLI_VER" != "$(curl -s $NEKORAY_ONLINE_VERSION)" ]]; then
    echo "Update is required"
    echo "Downloading updater script..."
    # download the updater script
    curl -s -o updater.sh $NEKORAY_ONLINE_VERSION_UPDATER
    # compare the hash of the downloaded updater script with the expected value
    if [[ "$(sha256sum updater.sh | awk '{print $1}')" == "$(curl -s $NEKORAY_ONLINE_VERSION_SHA)" ]]; then
      echo "Download successful. Running updater..."
      # execute the updater script
      bash updater.sh
    else
      echo "Error: hash mismatch. Aborting update."
    fi
  else
    echo "NEKOCLI is up to date"
  fi
}

function installer() {
  # check if NEKORAY_NETWORK_FOLDER is available
  if [[ ! -d "$NEKORAY_NETWORK_FOLDER" ]]; then
    echo "Creating $NEKORAY_NETWORK_FOLDER..."
    mkdir -p "$NEKORAY_NETWORK_FOLDER"
  fi

  # check if nekobox_core file is available
  if [[ ! -f "$NEKORAY_NETWORK_FOLDER/nekobox_core" ]]; then
    echo "Installing nekoray package..."
	cd $NETWORK_FOLDER
    # download the nekoray package
    wget "$NEKORAY_PACKAGE_URL"
    # unzip the package
    unzip *.zip -d "$NEKORAY_NETWORK"
    # remove the zip file
    rm "$NETWORK_FOLDER"/*.zip
    echo "Installation complete"
  else
    echo "nekoray package is already installed"
  fi
}

singbox_json() {

# check if config.json file is available
if [[ ! -f "$NEKORAY_NETWORK_FOLDER/sing-box-vpn.json" ]]; then

cat <<EOF > $NEKORAY_NETWORK_FOLDER/sing-box-vpn.json
{
    "dns": {
        "servers": [
            {
                "tag": "dns-direct",
                "address": "underlying://0.0.0.0",
                "detour": "direct"
            }
        ]
    },
    "inbounds": [
        {
            "type": "tun",
            "interface_name": "nekoray-tun",
            "inet4_address": "172.19.0.1/28",
            "inet6_address": "fdfe:dcba:9876::1/126",
            "mtu": 9000,
            "auto_route": true,
            "strict_route": false,
            "stack": "gvisor",
            "endpoint_independent_nat": true,
            "sniff": false
        }
    ],
    "outbounds": [
        {
            "type": "socks",
            "tag": "nekoray-socks",
            "udp_fragment": true,
            
            "server": "127.0.0.1",
            "server_port": 2080
        },
        {
            "type": "block",
            "tag": "block"
        },
        {
            "type": "direct",
            "tag": "direct"
        },
        {
            "type": "dns",
            "tag": "dns-out"
        }
    ],
    "route": {
        "auto_detect_interface": true,
        "rules": [
            {
                "inbound": "dns-in",
                "outbound": "dns-out"
            },
            {
                "network": "udp",
                "port": [
                    135,
                    137,
                    138,
                    139,
                    5353
                ],
                "outbound": "block"
            },
            {
                "ip_cidr": [
                    "224.0.0.0/3",
                    "ff00::/8"
                ],
                "outbound": "block"
            },
            {
                "source_ip_cidr": [
                    "224.0.0.0/3",
                    "ff00::/8"
                ],
                "outbound": "block"
            },
            {
                "port": 53,
                "process_name": [
                    "nekoray_core",
                    "nekoray_core.exe"
                ],
                "outbound": "dns-out"
            },
            {
                "process_name": [
                    "nekoray_core",
                    "nekoray_core.exe",
                    "nekobox_core",
                    "nekobox_core.exe"
                ],
                "outbound": "direct"
            }
            
            
        ]
    }
}

EOF

chmod +x $NEKORAY_NETWORK_FOLDER/sing-box-vpn.json
else
echo "sing-box-vpn.json has allready modified before"
fi

}

installing_core() {
echo
echo "Core Installer..."
installer
singbox_json

  # check if config.json file is available
  if [[ ! -f "$NEKORAY_NETWORK_FOLDER/config.json" ]]; then
    echo "Creating config.json..."
	touch $NEKORAY_NETWORK_FOLDER/config.json
  fi

  # check if run1.sh file is available
  if [[ ! -f "$NEKORAY_NETWORK_FOLDER/run1.sh" ]]; then
	touch $NEKORAY_NETWORK_FOLDER/run1.sh
	echo "Start 1"
	echo "#!/bin/bash" > $NEKORAY_NETWORK_FOLDER/run1.sh
	echo "\"/$NEKORAY_NETWORK_FOLDER/nekoray_core\" run -config \"/$NEKORAY_NETWORK_FOLDER/config.json\" " >> $NEKORAY_NETWORK_FOLDER/run1.sh
	chmod +x $NEKORAY_NETWORK_FOLDER/run1.sh	
  fi

  # check if run2.sh file is available
  if [[ ! -f "$NEKORAY_NETWORK_FOLDER/run2.sh" ]]; then
  touch $NEKORAY_NETWORK_FOLDER/run2.sh
  echo "Start 2"
  echo "#!/bin/bash" > $NEKORAY_NETWORK_FOLDER/run2.sh
  echo "\"$NEKORAY_NETWORK_FOLDER/nekobox_core\" run -c \"$NEKORAY_NETWORK_FOLDER/sing-box-vpn.json\" --protect-fwmark 514 " >> $NEKORAY_NETWORK_FOLDER/run2.sh
  chmod +x $NEKORAY_NETWORK_FOLDER/run2.sh    
  fi

}

pre_start_linux() {
  # set bypass: fwmark
  ip rule add pref 8999 fwmark 514 table main || return
  ip -6 rule add pref 8999 fwmark 514 table main || return

  # for Tun2Socket
  iptables -I INPUT -s 172.19.0.2 -d 172.19.0.1 -p tcp -j ACCEPT
  ip6tables -I INPUT -s fdfe:dcba:9876::2 -d fdfe:dcba:9876::1 -p tcp -j ACCEPT
}

start1() {
echo " RUNNING Start 1"
$NEKORAY_NETWORK_FOLDER/run1.sh </dev/null &>/dev/null &
}

start2() {
echo " RUNNING Start 2"
$NEKORAY_NETWORK_FOLDER/run2.sh </dev/null &>/dev/null &
}

if [ "$1" = "start" ]; then
    echo
    echo "Running Nekoray Client"
    pre_start_linux
    sleep 2
    start1
    sleep 3
    start2
    echo
    echo "to test running connection please run command below"
    echo "NEKORAY-CLI test"
  
  else if [ "$1" = "edit" ]; then
    echo
    echo "Editing Config.json files"
    nano $NEKORAY_NETWORK_FOLDER/config.json
    echo
    echo "to start Nekoray config please using command below"
    echo "NEKORAY-CLI start"

    else if [ "$1" = "install" ]; then
      echo
      echo "Installing Core.. Nekoray"
		installing_core
      echo
      echo "Please Update Config file using command"
      echo "NEKORAY-CLI edit"
      echo
      else if [ "$1" = "stop" ]; then
        echo
        echo "Stopping Core.. Nekoray"
        iptables -D INPUT -s 172.19.0.2 -d 172.19.0.1 -p tcp -j ACCEPT
        ip6tables -D INPUT -s fdfe:dcba:9876::2 -d fdfe:dcba:9876::1 -p tcp -j ACCEPT
        ip rule del fwmark 514
        ip -6 rule del fwmark 514
        killall -9 nekobox_core
        killall -9 nekoray_core
        else if [ "$1" = "config" ]; then
          config "$2"

        else if [ "$1" = "test" ]; then
          echo "TESTING IP Address"
          echo
          echo "------------------"
          echo "nekoray-tun 127.0.0.1:2080"
          echo
          echo "Testing Localhost:2080 port"
          curl --socks5 socks5://localhost:2080 https://myip.wtf/json -m 20
          echo
          echo "------------------"
          echo "Testing nekoray-tun interface"
          curl --interface nekoray-tun myip.wtf/json -m 20
        else if [ "$1" = "help" ]; then
          echo "Extreme Dot - NEKORAY CLI V$NEKOCLI_VER"
          echo
          echo "NEKORAY-CLI install"
          echo "NEKORAY-CLI start"
          echo "NEKORAY-CLI stop"
          echo "NEKORAY-CLI test"
          echo "NEKORAY-CLI edit"
          echo "NEKORAY-CLI update"
          echo "NEKORAY-CLI help"
          echo
          echo
            else if [ "$1" = "update" ]; then
            echo
            echo "Updating the script.."
            updater
              else
              echo
              echo "Enter [NEKORAY-CLI help] to see help and usage"
              echo
              echo
fi; fi; fi; fi; fi; fi; fi; fi

# nekocli config 2 
